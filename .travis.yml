# adapted from http://conda.pydata.org/docs/travis.html
language: python
python:
 # We don't actually use the Travis Python, but this keeps it organized.
 - "2.7"
 - "3.6"

dist: trusty

# switch to new infrastructure
sudo: false

before_install:
 # download and install miniconda
 - wget https://repo.continuum.io/miniconda/Miniconda3-4.3.21-Linux-x86_64.sh -O miniconda.sh;
 - bash miniconda.sh -b -p $HOME/conda
 - export PATH="$HOME/conda/bin:$PATH"
 - hash -r
 - conda config --set always_yes yes --set changeps1 no
 - conda update -q conda
 # Useful for debugging any issues with conda
 - conda info -a

 # create and activate the build/test environment
 - conda create -q -n tenv python=$TRAVIS_PYTHON_VERSION cmake
 - source activate tenv

# additional .debs we need:
addons:
 apt:
  packages:
    - build-essential
    - openjdk-7-jdk
    - swig
    - libjpeg-dev

install:
 - conda install -q numpy pillow pandas # matplotlib

 # install the conda boost packages from the RDKit binstar channel.
 - conda install -q -c rdkit boost=1.56.0
 # install eigen from conda-forge
 - conda install -q -c conda-forge eigen


before_script:
 # RDKit
 - export RDBASE=`pwd`
 - echo $RDBASE
 - export PYTHONPATH=${RDBASE}
 - export LD_LIBRARY_PATH=${RDBASE}/lib

 - export PYTHON=`which python`
 - echo $PYTHON
 - export PY_PREFIX=`$PYTHON -c "import sys; print(sys.prefix)"`
 - echo $PY_PREFIX
 - export PY_SP_DIR=$PY_PREFIX/lib/python$TRAVIS_PYTHON_VERSION/site-packages
 - echo $PY_SP_DIR


script:
 - cd $RDBASE
 - mkdir build
 - cd build
 - cmake -D Python_ADDITIONAL_VERSIONS=$TRAVIS_PYTHON_VERSION -D PYTHON_EXECUTABLE=$PYTHON -D PYTHON_LIBRARY=`find $PY_PREFIX -name "libpython$TRAVIS_PYTHON_VERSION*.so"` -D PYTHON_NUMPY_INCLUDE_PATH=$PY_SP_DIR/numpy/core/include -D BOOST_ROOT=$PY_PREFIX -D Boost_NO_SYSTEM_PATHS=ON -D RDK_BUILD_AVALON_SUPPORT=ON -D RDK_BUILD_INCHI_SUPPORT=ON -DRDK_BUILD_THREADSAFE_SSS=on -DRDK_TEST_MULTITHREADED=on -DRDK_INSTALL_STATIC_LIBS=OFF -DRDK_BUILD_SWIG_WRAPPERS=ON -DRDK_SWIG_STATIC=OFF -DRDK_BUILD_FREESASA_SUPPORT=ON ..

 - make -j2
 - make install
 - ls "$PREFIX/lib"
 - ls "$PY_PREFIX/lib"
 - LD_LIBRARY_PATH="$PY_PREFIX/lib:$PREFIX/lib;$SRC_DIR/lib;$LD_LIBRARY_PATH" ctest -j2 --output-on-failure
